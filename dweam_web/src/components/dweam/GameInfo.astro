---
interface Props {
  game: {
    name: string;
    tags?: string[];
  };
}

const { game } = Astro.props;
---

<div class="game-info">
  <h2 class="game-name text-left">{game.title ? game.title : game.id}</h2>
  <div class="game-tags">
    <span class="tag type-tag">{game.type}</span>
    {game.tags?.map((tag) => (
      <span class="tag">{tag}</span>
    ))}
  </div>
</div>

<style>
  .game-info {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    background: rgba(0, 0, 0, 0.8);
    color: #fff;
    padding: 12px;
    transform: translateY(calc(100% - 50px)); /* Show just the title by default */
    transition: transform 0.3s ease;
    pointer-events: none; /* Add this line to pass through events */
  }

  :global(.game-container:hover) .game-info {
    transform: translateY(0); /* Slide up completely on hover */
  }

  :global(.carousel-slide) .game-info {
    transform: translateY(calc(100% - 70px)); /* Show just the title by default */
  }

  /* Special behavior for carousel */
  :global(.carousel-slide) .game-info .game-name {
    font-size: 2rem;
  }


  .game-name {
    font-size: 1.2rem;
    text-align: left;
    margin: 0;
    font-weight: bold;
    line-height: 1.2;
    overflow-wrap: break-word;
  }

  .game-tags {
    font-size: 0.875rem;
    text-align: left;
    margin-top: 8px;
    opacity: 0;
    transition: opacity 0.3s ease;
    display: flex;
    flex-wrap: wrap;
    gap: 6px;
  }

  :global(.game-container:hover) .game-tags {
    opacity: 1;
    transition-delay: 0.1s; /* Slight delay for smoother appearance */
  }

  .tag {
    background: rgba(255, 255, 255, 0.3);
    padding: 2px 6px;
    border-radius: 4px;
    font-size: 0.75rem;
    backdrop-filter: blur(4px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: #ffffff;
    font-weight: 500;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  }

  .type-tag {
    background: rgba(255, 165, 0, 0.1); /* Orange background with 10% opacity */
    padding: 2px 6px;
    border-radius: 4px;
  }
</style>
